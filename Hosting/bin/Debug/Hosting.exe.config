<?xml version="1.0" encoding="utf-8" ?>
<configuration>
    <startup> 
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />
    </startup>
  
    <!--<system.serviceModel>
      
      --><!--协议--><!--
      --><!--<protocolMapping>
        <add scheme="https" binding="wsHttpBinding"/>
        <add scheme="net.tcp" binding="netTcpBinding"/>
        <add scheme="net.pipe" binding="netNamedPipeBinding"/>
        <add scheme="net.msmq" binding="netMsmqBinding"/>
      </protocolMapping>--><!--
      
      --><!--
        配置服务和终结点开始
        name:名称空间.类型名
        behaviorConfiguration：behavior的名称，请看behavior配置节的名称
       --><!--
      <services>
        <service name="WcfService.BookService">
          
          --><!--
            除非完全限定，否则地址将与上面提供的基址相关，每个服务可以有多个Endpoint
            Address：指定这个Endpoint对外的URI,这个URI可以是个绝对地址，也可以是个相对于baseAddress的
                       相对地址。如果此属性为空，则这个Endpoint的地址就是baseAddress
            bindingConfiguration：binding的名称，请看binding配置节的名称
          --><!--
          <endpoint name="endpointService"
                    address="https://127.0.0.1:9658/BookService"
                    binding="wsHttpBinding"
                    contract="WcfService.IBookService">
          </endpoint>

          --><!-- 此终结点不使用安全绑定，应在部署前确保其安全或将其删除--><!--
          --><!--<endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />--><!--

          <host>
            --><!-- 
                每种传输协议的baseAddress，用于跟使用同样传输协议Endpoint定义的相对地址组成完整的地址，
                 每种传输协议只能定义一个baseAddress。HTTP的baseAddress同时是service对外发布服务说明页面的URL --><!--
              
            --><!--<baseAddresses>
              <add baseAddress="http://localhost:8000/"/>
            </baseAddresses>--><!--
            
          </host>
        </service>
      </services>
      --><!--配置服务和终结点结束--><!--
      
      --><!--配置绑定开始--><!--
      <bindings>
        <basicHttpBinding></basicHttpBinding>
        <basicHttpContextBinding></basicHttpContextBinding>
        
        <netMsmqBinding></netMsmqBinding>
        <netNamedPipeBinding></netNamedPipeBinding>
        <webHttpBinding></webHttpBinding>

        <wsHttpBinding>
          <binding>
            <security mode="Transport">
              <transport clientCredentialType="None"></transport>
              <message clientCredentialType="Certificate"/>
            </security>
          </binding>
        </wsHttpBinding>
        <wsDualHttpBinding></wsDualHttpBinding>
      </bindings>
      --><!--配置绑定结束--><!--
      
      --><!--配置行为开始--><!--
      <behaviors>
        <serviceBehaviors>
          <behavior>
            --><!-- httpGetEnabled - bool类型的值，表示是否允许通过HTTP的get方法获取sevice的WSDL元数据 --><!--
            <serviceMetadata httpsGetEnabled="true" httpsGetUrl="https://127.0.0.1:9658/BookService/wcf"/>
            <serviceDebug includeExceptionDetailInFaults="true"/>
            --><!--<serviceCredentials> 
              <serviceCertificate  
                findValue="e6 00 c8 f6 93 ce 5c 8f a6 08 a5 c8 0e 09 de 5e 8b 9d 3a 99"             

                x509FindType="FindByThumbprint"  
                storeLocation="CurrentUser"  
                storeName="My" /> 

            </serviceCredentials>--><!-- 
          </behavior>
        </serviceBehaviors>
      </behaviors>
      --><!--配置行为结束--><!--
      
    </system.serviceModel>-->

    <!--<system.diagnostics>
      <sources>
        <source name="System.ServiceModel" switchValue="Warning" propagateActivity="true">
          <listeners>
            <add name="xml" />
          </listeners>
        </source>
      </sources>
      <sharedListeners>
        <add name="xml" type="System.Diagnostics.XmlWriterTraceListener" initializeData="D:\wcf.svclog" />
      </sharedListeners>
    </system.diagnostics>-->
</configuration>